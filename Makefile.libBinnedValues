## adapted from plotIt/Makefile

ObjSuf = o
SrcSuf = cc
DllSuf = so

ROOTCFLAGS = $(shell root-config --cflags)
ROOTLIBS   = $(shell root-config --noldflags --libs)
BOOST_ROOT = $(shell scram tool tag boost BOOST_BASE)

CXXFLAGS = -g -Wall -fPIC --std=c++11 -O3 -DSTANDALONE_SCALEFACTORS
LD       = $(CXX)
LDDIR    = -L$(shell root-config --libdir) -L$(BOOST_ROOT)/lib/
LDFLAGS  = -fPIC $(shell root-config --ldflags) $(LDDIR)
SOFLAGS  =
AR       = ar
ARFLAGS  = -cq

CXXFLAGS    += $(ROOTCFLAGS) $(INCLUDES) -I../.. -I$(shell echo $(BOOST_ROOT))/include ## assume to be in cp3_llbb/Framework
LIBS        = $(ROOTLIBS) ## TODO get the right ones from boost
STATIC_LIBS =
#------------------------------------------------------------------------------
SOURCES     = src/BinnedValues.cc src/BinnedValuesJSONParser.cc
OBJECTS     = $(SOURCES:.$(SrcSuf)=.$(ObjSuf))
DEPENDS     = $(SOURCES:.$(SrcSuf)=.d)

.SUFFIXES: .$(SrcSuf) .$(ObjSuf)

###

all: print_deps libBinnedValues.$(DllSuf)

print_deps:
	@echo "Building BinnedValuseJSONParser library with Boost and ROOT from current CMSSW environment..."
	@echo "Using ROOT from $(shell root-config --prefix)"
	@echo "Using Boost from $(shell scram tool tag boost BOOST_BASE)"

clean:
	@rm -f $(OBJECTS);
	@rm -f $(DEPENDS);

libBinnedValues.$(DllSuf): $(OBJECTS)
	@echo "Linking $@..."
	@$(LD) -shared $(SOFLAGS) $(LDFLAGS) $+ -o $@ -Wl,-Bstatic $(STATIC_LIBS) -Wl,-Bdynamic $(LIBS)

%.o: %.cc
	@echo "Compiling $<..."
	@$(CXX) $(CXXFLAGS) -c -o $@ $<

# Make the dependencies
%.d: %.cc
	@ $(CXX) $(CXXFLAGS) -MM $< | sed -e 's@^\(.*\)\.o:@src/\1.d src/\1.o:@' > $@

ifneq ($(MAKECMDGOALS), clean)
-include $(DEPENDS)
endif
